TITLE: Websites on Speed
SUBTITLE: Yahoo!7 &bull; May 25, 2009 &bull; Sydney, NSW, Australia
AUTHOR: Philip S Tellis
DATE: 2009-05-25
COMPANY: Yahoo! Inc
CONFERENCE: <a href="http://upcoming.yahoo.com/event/2570945/">Yahoo!7 Open Session</a>
%
<code>$ whoami</code>
-------------------------------
[bg code_martial/http://farm3.static.flickr.com/2323/1543735477_f302fdc3a3_b.jpg]
- Philip Tellis
- geek / opensource developer
- yahoo
- <a href="http://twitter.com/bluesmoon">@bluesmoon</a>
- <a href="http://bluesmoon.info/">http://bluesmoon.info/</a>
%
What's this talk all about?
---------------------------
[bg justbecause/http://farm1.static.flickr.com/102/291874981_c07e31288e_o.jpg]
%
What's this talk all about?
---------------------------
[bg justbecause/http://farm1.static.flickr.com/102/291874981_c07e31288e_o.jpg]
- Find out what makes a website slow
- Find out what to do to make it faster
- List some tools
%
What's a website made of?
-------------------------
[class="alert"] ...
%
What's a website made of?
-------------------------
- Content (HTML)
- Images/Flash
- Style (CSS)
- Interaction (Javascript)
- A server farm below this
- Maybe a database, Web services & CDN
%
Where does the time go?
-----------------------
- DNS lookups & HTTP requests
- Building pages
- Downloading stuff
- Rendering stuff
- User Interaction
%
How do we speed it up?
-----------------
- DNS lookups & HTTP requests &raquo; <span class="light">Reduce lookups and connections</span>
- Building pages &raquo; <span class="light">Return content as fast as possible</span>
- Downloading stuff &raquo; <span class="light">Reduce the size of content</span>
- Rendering stuff &raquo; <span class="light">Structure pages for performance</span>
- User Interaction &raquo; <span class="light">Cheat</span>
%
How do we speed it up?
-----------------
- DNS lookups & HTTP requests &raquo; Reduce lookups and connections
- Building pages &raquo; <span class="light">Return content as fast as possible</span>
- Downloading stuff &raquo; <span class="light">Reduce the size of content</span>
- Rendering stuff &raquo; <span class="light">Structure pages for performance</span>
- User Interaction &raquo; <span class="light">Cheat</span>
%
How do we speed it up?
-----------------
- Reduce lookups and connections
- Building pages &raquo; Return content as fast as possible
- Downloading stuff &raquo; <span class="light">Reduce the size of content</span>
- Rendering stuff &raquo; <span class="light">Structure pages for performance</span>
- User Interaction &raquo; <span class="light">Cheat</span>
%
How do we speed it up?
-----------------
- Reduce lookups and connections
- Return content as fast as possible
- Downloading stuff &raquo; Reduce the size of content
- Rendering stuff &raquo; <span class="light">Structure pages for performance</span>
- User Interaction &raquo; <span class="light">Cheat</span>
%
How do we speed it up?
-----------------
- Reduce lookups and connections
- Return content as fast as possible
- Reduce the size of content
- Rendering stuff &raquo; Structure pages for performance
- User Interaction &raquo; <span class="light">Cheat</span>
%
How do we speed it up?
-----------------
- Reduce lookups and connections
- Return content as fast as possible
- Reduce the size of content
- Structure pages for performance
- User Interaction &raquo; Cheat
%
How do we speed it up?
-----------------
- Reduce lookups and connections
- Return content as fast as possible
- Reduce the size of content
- Structure pages for performance
- Cheat
%
1. Fix it - reduce lookups
------------------------------------
[bg swanksalot/http://farm3.static.flickr.com/2417/2453794337_4ddf3a984d_b.jpg]
%
1. Fix it - reduce lookups
------------------------------------
[bg swanksalot/http://farm3.static.flickr.com/2417/2453794337_4ddf3a984d_b.jpg]
- Reduce the number of domains (2-4)
- [class="light"] Avoid redirects
   - <code>301, 302, location.href=...</code>
- [class="light"] Combine CSS and Javascript files into a single file for each type
- [class="light"] Combine decorative images into sprites
- [class="light"] Cache aggressively
%
1. Fix it - reduce lookups
------------------------------------
[bg swanksalot/http://farm3.static.flickr.com/2417/2453794337_4ddf3a984d_b.jpg]
- Reduce the number of domains (2-4)
- Avoid redirects
   - <code>301, 302, location.href=...</code>
- [class="light"] Combine CSS and Javascript files into a single file for each type
- [class="light"] Combine decorative images into sprites
- [class="light"] Cache aggressively
%
1. Fix it - reduce lookups
------------------------------------
- Reduce the number of domains (2-4)
- Avoid redirects
   - <code>301, 302, location.href=...</code>
- Combine CSS and Javascript files into a single file for each type
- [class="light"] Combine decorative images into sprites
- [class="light"] Cache aggressively
%
1. Fix it - reduce lookups
--------------------------
Sample combo handler:
<pre class="dark" style="padding:1em 0 0 1em;">
   <span style="color:#a52a2a;font-weight:bold;">$</span><span style="color:#008b8b;">combo</span> <span style="color:#a52a2a;font-weight:bold;">=</b></span> <span style="color:#008b8b;">preg_replace</span><span style="color:#6a5acd;">(</span>'<span style="color:#ff00ff;">/^.*\?/</span>', '', <span style="color:#a52a2a;font-weight:bold;">$</b></span><span style="color:#008b8b;">_SERVER</span><span style="color:#6a5acd;">[</span>'<span style="color:#ff00ff;">REQUEST_URI</span>'<span style="color:#6a5acd;">])</span>;

   <span style="color:#a52a2a;font-weight:bold;">$</span><span style="color:#008b8b;">sources</span> <span style="color:#a52a2a;font-weight:bold;">=</b></span> <span style="color:#008b8b;">split</span><span style="color:#6a5acd;">(</span>'<span style="color:#ff00ff;">&amp;</span>', <span style="color:#a52a2a;font-weight:bold;">$</b></span><span style="color:#008b8b;">combo</span><span style="color:#6a5acd;">)</span>;

   <span style="color:#008b8b;">header</span><span style="color:#6a5acd;">(</span>'<span style="color:#ff00ff;">Content-type: text/javascript</span>'<span style="color:#6a5acd;">)</span>;

   <span style="color:#a52a2a;font-weight:bold;">foreach</span><span style="color:#6a5acd;">(</span><span style="color:#a52a2a;font-weight:bold;">$</b></span><span style="color:#008b8b;">sources</span> <span style="color:#a52a2a;font-weight:bold;">as</b></span> <span style="color:#a52a2a;font-weight:bold;">$</b></span><span style="color:#008b8b;">source</span><span style="color:#6a5acd;">)</span> <span style="color:#6a5acd;">{</span>
           <span style="color:#0000ff;">// </span><span style="background-color: #ffff00"><span style="color:#0000ff;">TODO</span></span><span style="color:#0000ff;">: Verify that \$source is safe and exists</span>
           <span style="color:#a020f0;">include</span><span style="color:#6a5acd;">(</span>&quot;<span style="color:#ff00ff;">/var/www/</span><span style="color:#a52a2a;font-weight:bold;">$</span><span style="color:#008b8b;">source</span>&quot;<span style="color:#6a5acd;">)</span>;
   <span style="color:#6a5acd;">}</span>
</pre>
%
1. Fix it - reduce lookups
------------------------------------
- Reduce the number of domains (2-4)
- Avoid redirects
   - <code>301, 302, location.href=...</code>
- Combine CSS and Javascript files into a single file for each type
- [class="light"] Combine decorative images into sprites
- [class="light"] Cache aggressively
%
1. Fix it - reduce lookups
------------------------------------
- Reduce the number of domains (2-4)
- Avoid redirects
   - <code>301, 302, location.href=...</code>
- Combine CSS and Javascript files into a single file for each type
- Combine decorative images into <a href="http://www.csssprites.com/">sprites</a>
- [class="light"] Cache aggressively
%
1. Fix it - reduce lookups
------------------------------------
- Reduce the number of domains (2-4)
- Avoid redirects
   - <code>301, 302, location.href=...</code>
- Combine CSS and Javascript files into a single file for each type
- Combine decorative images into <a href="http://www.csssprites.com/">sprites</a>
- Cache aggressively
%
1. Fix it - reduce lookups
------------------------------------
<pre class="dark">
   &lt;Location /static&gt;
      ExpiresActive	On
      ExpiresDefault	"access plus 1 year"
   &lt;/Location&gt;
</pre>
%
1. Fix it - reduce lookups
------------------------------------
- Reduce the number of domains (2-4)
- Avoid redirects
   - <code>301, 302, location.href=...</code>
- Combine CSS and Javascript files into a single file for each type
- Combine decorative images into <a href="http://www.csssprites.com/">sprites</a>
- Cache aggressively
%
2. Fix it - be quick on the return
----------------------------------
[bg revdancatt/http://farm1.static.flickr.com/67/197037896_2551adb0dc_b.jpg]
%
2. Fix it - be quick on the return
----------------------------------
[bg revdancatt/http://farm1.static.flickr.com/67/197037896_2551adb0dc_b.jpg]
- Get the first chunk of bytes out as soon as possible
- [class="light"] Flush often
- [class="light"] Don't bother your server with static content
- [class="light"] Cache expensive back end calls, and use a front-end cache
- [class="light"] Reduce MaxClients in apache
%
2. Fix it - be quick on the return
----------------------------------
[bg revdancatt/http://farm1.static.flickr.com/67/197037896_2551adb0dc_b.jpg]
- Get the first chunk of bytes out as soon as possible
- Flush often
- [class="light"] Don't bother your server with static content
- [class="light"] Cache expensive back end calls, and use a front-end cache
- [class="light"] Reduce MaxClients in apache
%
2. Fix it - be quick on the return
----------------------------------
- Get the first chunk of bytes out as soon as possible
- Flush often
- Don't bother your server with static content
- [class="light"] Cache expensive back end calls, and use a front-end cache
- [class="light"] Reduce MaxClients in apache
%
2. Fix it - be quick on the return
----------------------------------
- Get the first chunk of bytes out as soon as possible
- Flush often
- Don't bother your server with static content
- Cache expensive back end calls, and use a front-end cache
- [class="light"] Reduce MaxClients in apache
%
2. Fix it - be quick on the return
----------------------------------
<img src="images/caching.png" alt="Caching architecture">

- Cache expensive back end calls, and use a front-end cache
%
2. Fix it - be quick on the return
----------------------------------
- Get the first chunk of bytes out as soon as possible
- Flush often
- Don't bother your server with static content
- Cache expensive back end calls, and use a front-end cache
- [class="light"] Reduce MaxClients in apache
%
2. Fix it - be quick on the return
----------------------------------
- Get the first chunk of bytes out as soon as possible
- Flush often
- Don't bother your server with static content
- Cache expensive back end calls, and use a front-end cache
- Reduce MaxClients in apache
%
3. Fix it - slim down
---------------------
[bg frosted_peppercorn/http://farm1.static.flickr.com/173/481102393_ee5dd35c52_b.jpg]
%
3. Fix it - slim down
---------------------
[bg frosted_peppercorn/http://farm1.static.flickr.com/173/481102393_ee5dd35c52_b.jpg]
- gzip content over the wire
- [class="light"] Minify CSS and Javascript (use <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>) & Optimise images (use <a href="http://smush.it/">smush.it</a>)
- [class="light"] Avoid duplicate CSS and Javascript files
- [class="light"] Reduce cookie size
- [class="light"] Use a CDN
- [class="light"] Post-load components
%
3. Fix it - slim down
---------------------
[bg frosted_peppercorn/http://farm1.static.flickr.com/173/481102393_ee5dd35c52_b.jpg]
- gzip content over the wire
- Minify CSS and Javascript (use <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>) & Optimise images (use <a href="http://smush.it/">smush.it</a>)
- [class="light"] Avoid duplicate CSS and Javascript files
- [class="light"] Reduce cookie size
- [class="light"] Use a CDN
- [class="light"] Post-load components
%
3. Fix it - slim down
---------------------
- gzip content over the wire
- Minify CSS and Javascript (use <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>) & Optimise images (use <a href="http://smush.it/">smush.it</a>)
- Avoid duplicate CSS and Javascript files
- [class="light"] Reduce cookie size
- [class="light"] Use a CDN
- [class="light"] Post-load components
%
3. Fix it - slim down
---------------------
- gzip content over the wire
- Minify CSS and Javascript (use <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>) & Optimise images (use <a href="http://smush.it/">smush.it</a>)
- Avoid duplicate CSS and Javascript files
- Reduce cookie size
- [class="light"] Use a CDN
- [class="light"] Post-load components
%
3. Fix it - slim down
---------------------
- gzip content over the wire
- Minify CSS and Javascript (use <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>) & Optimise images (use <a href="http://smush.it/">smush.it</a>)
- Avoid duplicate CSS and Javascript files
- Reduce cookie size
- Use a CDN
- [class="light"] Post-load components
%
3. Fix it - slim down
---------------------
- gzip content over the wire
- Minify CSS and Javascript (use <a href="http://developer.yahoo.com/yui/compressor/">YUI Compressor</a>) & Optimise images (use <a href="http://smush.it/">smush.it</a>)
- Avoid duplicate CSS and Javascript files
- Reduce cookie size
- Use a CDN
- Post-load components
%
4. Fix it - restructure pages
-----------------------------
[bg bluesmoon/http://farm2.static.flickr.com/1382/867742899_dd59f2373c_b.jpg]
%
4. Fix it - restructure pages
-----------------------------
[bg bluesmoon/http://farm2.static.flickr.com/1382/867742899_dd59f2373c_b.jpg]
- Put CSS at the top to avoid having to redraw the page later
- [class="light"] Put Javascript at the bottom so that it doesn't block rendering
- [class="light"] Avoid tables for layout
- [class="light"] Delay loading of invisible content
- [class="light"] Reduce the number of HTML elements
%
4. Fix it - restructure pages
-----------------------------
[bg bluesmoon/http://farm2.static.flickr.com/1382/867742899_dd59f2373c_b.jpg]
- Put CSS at the top to avoid having to redraw the page later
- Put Javascript at the bottom so that it doesn't block rendering
- [class="light"] Avoid tables for layout
- [class="light"] Delay loading of invisible content
- [class="light"] Reduce the number of HTML elements
%
4. Fix it - restructure pages
-----------------------------
- Put CSS at the top to avoid having to redraw the page later
- Put Javascript at the bottom so that it doesn't block rendering
- Avoid tables for layout
- [class="light"] Delay loading of invisible content
- [class="light"] Reduce the number of HTML elements
%
4. Fix it - restructure pages
-----------------------------
- Put CSS at the top to avoid having to redraw the page later
- Put Javascript at the bottom so that it doesn't block rendering
- Avoid tables for layout
- Delay loading of invisible content
- [class="light"] Reduce the number of HTML elements
%
4. Fix it - restructure pages
-----------------------------
- Put CSS at the top to avoid having to redraw the page later
- Put Javascript at the bottom so that it doesn't block rendering
- Avoid tables for layout
- Delay loading of invisible content
- Reduce the number of HTML elements
%
5. Fix it - cheat the DOM
-------------------------
[bg matthewblack/http://farm3.static.flickr.com/2122/2140930591_d53214c530_b.jpg]
%
5. Fix it - cheat the DOM
-------------------------
[bg matthewblack/http://farm3.static.flickr.com/2122/2140930591_d53214c530_b.jpg]
- Attach events on a container rather than on each element
- [class="light"] Delay event attachment
- [class="light"] Cache DOM elements and work on invisible elements
- [class="light"] Reduce iterations on DOM elements
- [class="light"] Use more specific, semantically correct HTML tags
- [class="light"] Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
[bg matthewblack/http://farm3.static.flickr.com/2122/2140930591_d53214c530_b.jpg]
- Attach events on a container rather than on each element
- Delay event attachment
- [class="light"] Cache DOM elements and work on invisible elements
- [class="light"] Reduce iterations on DOM elements
- [class="light"] Use more specific, semantically correct HTML tags
- [class="light"] Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
- Attach events on a container rather than on each element
- Delay event attachment
- Cache DOM elements and work on invisible elements
- [class="light"] Reduce iterations on DOM elements
- [class="light"] Use more specific, semantically correct HTML tags
- [class="light"] Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
- Attach events on a container rather than on each element
- Delay event attachment
- Cache DOM elements and work on invisible elements
- Reduce iterations on DOM elements
- [class="light"] Use more specific, semantically correct HTML tags
- [class="light"] Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
- Attach events on a container rather than on each element
- Delay event attachment
- Cache DOM elements and work on invisible elements
- Reduce iterations on DOM elements
- Use more specific, semantically correct HTML tags
- [class="light"] Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
Old code:
<pre class="dark">
    <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>div</b></font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>div</b></font><font color="#008b8b">&gt;</font>
        <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>input</b></font><font color="#008b8b"> </font><font color="#2e8b57"><b>class</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;entry&quot;</font><font color="#008b8b"> </font><font color="#2e8b57"><b>name</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;larry&quot;</font><font color="#008b8b">&gt;</font>
        <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>input</b></font><font color="#008b8b"> </font><font color="#2e8b57"><b>class</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;entry&quot;</font><font color="#008b8b"> </font><font color="#2e8b57"><b>name</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;curly&quot;</font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;/</font><font color="#a52a2a"><b>div</b></font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>div</b></font><font color="#008b8b">&gt;</font>
        <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>input</b></font><font color="#008b8b"> </font><font color="#2e8b57"><b>class</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;entry&quot;</font><font color="#008b8b"> </font><font color="#2e8b57"><b>name</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;moe&quot;</font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;/</font><font color="#a52a2a"><b>div</b></font><font color="#008b8b">&gt;</font>
    <font color="#008b8b">&lt;/</font><font color="#a52a2a"><b>div</b></font><font color="#008b8b">&gt;</font>
</pre>
%
5. Fix it - cheat the DOM
-------------------------
New code:
<pre class="dark">
    <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>ul</b></font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>li</b></font><font color="#008b8b">&gt;</font>
        <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>input</b></font><font color="#008b8b"> </font><font color="#2e8b57"><b>class</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;entry&quot;</font><font color="#008b8b"> </font><font color="#2e8b57"><b>name</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;larry&quot;</font><font color="#008b8b">&gt;</font>
        <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>input</b></font><font color="#008b8b"> </font><font color="#2e8b57"><b>class</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;entry&quot;</font><font color="#008b8b"> </font><font color="#2e8b57"><b>name</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;curly&quot;</font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;/</font><font color="#a52a2a"><b>li</b></font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>li</b></font><font color="#008b8b">&gt;</font>
        <font color="#008b8b">&lt;</font><font color="#a52a2a"><b>input</b></font><font color="#008b8b"> </font><font color="#2e8b57"><b>class</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;entry&quot;</font><font color="#008b8b"> </font><font color="#2e8b57"><b>name</b></font><font color="#008b8b">=</font><font color="#4400ff">&quot;moe&quot;</font><font color="#008b8b">&gt;</font>
      <font color="#008b8b">&lt;/</font><font color="#a52a2a"><b>li</b></font><font color="#008b8b">&gt;</font>
    <font color="#008b8b">&lt;/</font><font color="#a52a2a"><b>ul</b></font><font color="#008b8b">&gt;</font>
</pre>
%
5. Fix it - cheat the DOM
-------------------------
- Attach events on a container rather than on each element
- Delay event attachment
- Cache DOM elements and work on invisible elements
- Reduce iterations on DOM elements
- Use more specific, semantically correct HTML tags
- [class="light"] Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
- Attach events on a container rather than on each element
- Delay event attachment
- Cache DOM elements and work on invisible elements
- Reduce iterations on DOM elements
- Use more specific, semantically correct HTML tags
- Use local copies of global variables
- [class="light"] Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
5. Fix it - cheat the DOM
-------------------------
- Attach events on a container rather than on each element
- Delay event attachment
- Cache DOM elements and work on invisible elements
- Reduce iterations on DOM elements
- Use more specific, semantically correct HTML tags
- Use local copies of global variables
- Profile your Javascript (use <a href="http://developer.yahoo.com/yui/profiler/">YUI Profiler</a>)
%
6. More tips
------------
[bg eagereyes/http://farm4.static.flickr.com/3221/2624337393_0b43250b72_b.jpg]
%
6. More tips
------------
[bg eagereyes/http://farm4.static.flickr.com/3221/2624337393_0b43250b72_b.jpg]
- Preload expected content
- [class="light"] Progressively enhance your pages
- [class="light"] Try to send empty POST requests
- [class="light"] Use &lt;link&gt; instead of @import and avoid CSS expressions
- [class="light"] Avoid 404s and reduce IFRAMEs
- [class="light"] Turn off <code>.htaccess</code>
%
6. More tips
------------
[bg eagereyes/http://farm4.static.flickr.com/3221/2624337393_0b43250b72_b.jpg]
- Preload expected content
- Progressively enhance your pages
- [class="light"] Try to send empty POST requests
- [class="light"] Use &lt;link&gt; instead of @import and avoid CSS expressions
- [class="light"] Avoid 404s and reduce IFRAMEs
- [class="light"] Turn off <code>.htaccess</code>
%
6. More tips
------------
- Preload expected content
- Progressively enhance your pages
- Try to send empty POST requests
- [class="light"] Use &lt;link&gt; instead of @import and avoid CSS expressions
- [class="light"] Avoid 404s and reduce IFRAMEs
- [class="light"] Turn off <code>.htaccess</code>
%
6. More tips
------------
- Preload expected content
- Progressively enhance your pages
- Try to send empty POST requests
- Use &lt;link&gt; instead of @import and avoid CSS expressions
- [class="light"] Avoid 404s and reduce IFRAMEs
- [class="light"] Turn off <code>.htaccess</code>
%
6. More tips
------------
- Preload expected content
- Progressively enhance your pages
- Try to send empty POST requests
- Use &lt;link&gt; instead of @import and avoid CSS expressions
- Avoid 404s and reduce IFRAMEs
- [class="light"] Turn off <code>.htaccess</code>
%
6. More tips
------------
- Preload expected content
- Progressively enhance your pages
- Try to send empty POST requests
- Use &lt;link&gt; instead of @import and avoid CSS expressions
- Avoid 404s and reduce IFRAMEs
- Turn off <code>.htaccess</code>
%
YSlow
-----
- Firebug plugin to analyse pages for performance gotchas
- <a href="http://developer.yahoo.com/yslow">http://developer.yahoo.com/yslow/</a>
- Follow YSlow's advice to improve page performance
- Try Sergey Chernyshev's <a href="http://www.showslow.com/">ShowSlow</a> to automate YSlow usage
%
Tools
-----
[bg jeffwerner/http://farm1.static.flickr.com/123/329401643_b07aaed4de_b.jpg]
- YSlow: <a href="http://developer.yahoo.com/yslow/">developer.yahoo.com/yslow/</a>
- SmushIt: <a href="http://smushit.com/">smushit.com</a>
- CSS Sprites: <a href="http://www.csssprites.com/">csssprites.com</a>
- YUI Profiler: <a href="http://developer.yahoo.com/yui/profiler/">developer.yahoo.com/yui/profiler/</a>
- ShowSlow: <a href="http://www.showslow.com/">showslow.com</a>
- Webpage Test: <a href="http://webpagetest.org/">webpagetest.org</a>
%
Closing notes
-------------
[bg thetaleoflight/http://farm4.static.flickr.com/3608/3362048052_f0e5b37444_b.jpg]
- [class="light"] Don't optimise prematurely.  Profile first.
- [class="light"] Go for the low hanging fruit.  Configuration is cheaper than redevelopment.
- [class="light"] Performance is not the same as scalability, you probably need both.
- [class="light"] KISS
%
Closing notes
-------------
[bg thetaleoflight/http://farm4.static.flickr.com/3608/3362048052_f0e5b37444_b.jpg]
- Don't optimise prematurely.  Profile first.
- [class="light"] Go for the low hanging fruit.  Configuration is cheaper than redevelopment.
- [class="light"] Performance is not the same as scalability, you probably need both.
- [class="light"] KISS
%
Closing notes
-------------
[bg thetaleoflight/http://farm4.static.flickr.com/3608/3362048052_f0e5b37444_b.jpg]
- Don't optimise prematurely.  Profile first.
- Go for the low hanging fruit.  Configuration is cheaper than redevelopment.
- [class="light"] Performance is not the same as scalability, you probably need both.
- [class="light"] KISS
%
Closing notes
-------------
[bg thetaleoflight/http://farm4.static.flickr.com/3608/3362048052_f0e5b37444_b.jpg]
- Don't optimise prematurely.  Profile first.
- Go for the low hanging fruit.  Configuration is cheaper than redevelopment.
- Performance is not the same as scalability, you probably need both.
- [class="light"] KISS
%
Closing notes
-------------
[bg thetaleoflight/http://farm4.static.flickr.com/3608/3362048052_f0e5b37444_b.jpg]
- Don't optimise prematurely.  Profile first.
- Go for the low hanging fruit.  Configuration is cheaper than redevelopment.
- Performance is not the same as scalability, you probably need both.
- KISS
%
Credits
-------
[bg jackhynes/http://farm1.static.flickr.com/192/519904699_ba1a70c094_b.jpg]
- The following people were directly or indirectly involved in research leading to this content:
   - Stoyan Stefanov, Nicole Sullivan, Tenni Theurer, Wayne Shea,
   - Julien Lecompte, Iain Lamb, Philip Tellis, Subramanyan Murali,
   - Nicholas Zakas, Jimmy Byrum, Steve Souders
- <a href="http://developer.yahoo.net/performance">http://developer.yahoo.net/performance</a>
%
Photo Credits
-------------
[bg 25602112@N07/http://farm4.static.flickr.com/3244/2539754489_a20454a273_o.jpg]
- [class="small-children"] Shouts to each photographer for these most excellent CC licensed photos:
   - <a href="http://flickr.com/photos/code_martial/1543735477/">http://flickr.com/photos/code\_martial/1543735477/</a>
   - <a href="http://www.flickr.com/photos/justbecause/291874981/">http://www.flickr.com/photos/justbecause/291874981/</a>
   - <a href="http://flickr.com/photos/swanksalot/2453794337/">http://flickr.com/photos/swanksalot/2453794337/</a>
   - <a href="http://flickr.com/photos/revdancatt/197037896/">http://flickr.com/photos/revdancatt/197037896/</a>
   - <a href="http://flickr.com/photos/frosted_peppercorn/481102393/">http://flickr.com/photos/frosted\_peppercorn/481102393/</a>
   - <a href="http://flickr.com/photos/matthewblack/2140930591/">http://flickr.com/photos/matthewblack/2140930591/</a>
   - <a href="http://flickr.com/photos/eagereyes/2624337393/">http://flickr.com/photos/eagereyes/2624337393/</a>
   - <a href="http://flickr.com/photos/jeffwerner/329401643/">http://flickr.com/photos/jeffwerner/329401643/</a>
   - <a href="http://flickr.com/photos/thetaleoflight/3362048052/">http://flickr.com/photos/thetaleoflight/3362048052/</a>
   - <a href="http://flickr.com/photos/jackhynes/519904699/">http://flickr.com/photos/jackhynes/519904699/</a>
   - <a href="http://flickr.com/photos/25602112@N07/2539754489/">http://flickr.com/photos/25602112@N07/2539754489/</a>
%
[class="alert"] Thank you
